// For format details, see https://aka.ms/devcontainer.json. For config options, see the
// README at: https://github.com/devcontainers/templates/tree/main/src/go-postgres
{
	"name": "Aegion Golang Backend",
	"dockerComposeFile": "docker-compose.yml",
	"service": "app",
	"workspaceFolder": "/workspaces/${localWorkspaceFolderBasename}",
	"features": {
		// "ghcr.io/devcontainers/features/aws-cli:1": {},
		// "ghcr.io/devcontainers/features/go:1": {},
		// "ghcr.io/customink/codespaces-features/sam-cli:1": {},
		// "ghcr.io/guiyomh/features/golangci-lint:0": {},
		"ghcr.io/devcontainers/features/docker-outside-of-docker:1": {},
		"ghcr.io/devcontainers/features/python:1": {},
		"ghcr.io/devcontainers-extra/features/poetry:2": {}
	},
	"mounts": [
		{
			"source": "/var/run/docker.sock",
			"target": "/var/run/docker-host.sock",
			"type": "bind"
		}
	],
	// Use this environment variable if you need to bind mount your local source code into a new container.
	"remoteEnv": {
		"LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}"
	},
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	"forwardPorts": [
		5432,
		8080,
		9000,
		9001
	],
	// Configure tool-specific properties.
	"customizations": {
		// Configure properties specific to VS Code.
		"vscode": {
			// Add the IDs of extensions you want installed when the container is created.
			"extensions": [
				"ms-azuretools.vscode-docker",
				"golang.go",
				"GitHub.copilot",
				"ms-vscode.makefile-tools",
				"GitHub.copilot-chat",
				"Ariga.atlas-hcl",
				"mtxr.sqltools",
				"mtxr.sqltools-driver-pg"
			]
		}
	},
	// Use 'postCreateCommand' to run commands after the container is created.
	// "postCreateCommand": "go version",
	// Uncomment to connect as root instead. More info: https://aka.ms/dev-containers-non-root.
	"remoteUser": "root"
}